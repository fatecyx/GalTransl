---
# 翻译后端相关设置
backendSpecific:
  GPT4: # GPT4/Claude-3/Deepseek-V3/Deepseek-R1等，所有OpenAI API类接口通用
    tokens:
      - token: sk-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        endpoint: https://api.openai.com # 请求地址，使用转发或第三方API时修改
    rewriteModelName: "" # 设置自定义的模型名称，用于调用Claude/Deepseek等模型

  SakuraLLM: # Sakura/Galtransl API
    endpoints:
      - http://127.0.0.1:8080
      #- http://127.0.0.1:5001 # 可以填入多个endpoints，用于多线程
    rewriteModelName: "" # 设置自定义的模型名称，在使用ollama时要修改

# 程序设置
common:
  gpt.numPerRequestTranslate: 8 # 单次请求翻译句子数量，推荐值 < 15
  workersPerProject: 1 # 同时翻译n个文件。当开启splitFile时，允许单文件多线程。
  language: "ja2zh-cn" # 源语言2(to)目标语言。[zh-cn/zh-tw/en/ja/ko/ru/fr]

  # (实验性)单文件分割设置（※重要：不要在翻译中途修改，否则会导致缓存失效）
  splitFile: false # 是否启用单文件分割。[True/False]
  splitFileMethod: "EqualPartsSplitter" # 分句方法，EqualPartsSplitter为对文件平均分句，DictionaryCountSplitter为指定条数分句。[EqualPartsSplitter/DictionaryCountSplitter]
  splitFileNum: -1 # 平均分句时，表示每个文件拆分成n段，-1则与workersPerProject一致；条数分句时，表示n句拆分一次，此时建议大于1000
  splitFileCrossNum: 0 # 分割文件时前后交叉n句，可能可以提高衔接处翻译质量[推荐0或10]。

  save_steps: 1 # 每翻译n次保存一次缓存，单个文件较大时可以调高到100之类的数来提高速度。[1-999]
  start_time: "" # 定时启动，例如00:30，留空则立即启动。[00:00-23:59]
  linebreakSymbol: "\r\n" # 这个项目在json中使用的换行符，找问题和自动修复时用到，不影响翻译。
  skipH: false # 跳过可能触发敏感词检测的句子。[True/False]
  skipRetry: false # 解析结果出错时，是否跳过循环重试，直接用"Fail Translation"占位。[True/False]
  retranslFail: false # 重启时重翻所有显示为"Fail Translation"的句子。[True/False]
  retranslKey:
    - "重启时主动重翻在缓存的problem或pre_jp中包含对应**关键字**的句子，去掉下面列表中的注释来使用，也可添加自定义的关键字。"
    #- "词频过高" # 重复大于20次
    #- "残留日文" # 日文平假名片假名残留
    #- "项目GPT字典" # LLM没有按GPT字典要求翻译
    #- "引入英文" # 本来没有英文，译文引入了英文

  # 通用翻译设置
  gpt.streamOutputMode: true # 流式输出效果，多线程下无效。[True/False]
  gpt.tooManyRequestsWaitTime: 60 # Too Many Requests 错误等待时间，单位秒
  gpt.enhance_jailbreak: False # 减少通用模型拒绝翻译
  # GPT4
  gpt.enableProofRead: false # (GPT4)是否开启译后校润。（不建议使用，很久未维护）[True/False]
  gpt.numPerRequestProofRead: 7 # (GPT4)单次校润句子数量，不建议修改
  gpt.restoreContextMode: true # (GPT3.5/4)重启时恢复上一轮的译文前文。[True/False]
  gpt.change_prompt: false # (GPT-4/r1)是否开启修改默认prompt
  gpt.prompt_type: "AdditionalPrompt" # (GPT-4/r1)"AdditionalPrompt"为增加额外要求，"OverwritePrompt"为覆写原本的prompt
  gpt.prompt_content: "翻译结果使用文言文" # 示例额外要求，change_prompt为true时才生效
  # Sakura/GalTransl
  gpt.token_limit: 0 # (Sakura/Galtransl-7b)（实验性）大于0时限制每轮请求的token数量。防止爆context时可以设置为llama.cpp -c的数值除2。
  gpt.transl_dropout: 0 # (Sakura/Galtransl-7b)（实验性）丢弃翻译结果末尾的n行，可能会提高上下文准确性。[0-2]
  # 调试日志
  loggingLevel: info # 日志级别[debug/info/warning]
  saveLog: false # 是否记录日志到文件[True/False]

# 插件，插件介绍可在启动程序后选择show-plugs查看，或在plugins目录内查看
plugin:
  filePlugin: file_galtransl_json # 文件插件，用于支持更多格式，file_galtransl_json是本程序的标准格式插件
  # 翻译字幕时使用file_subtitle_srt_lrc_vtt
  # 翻译小说时使用file_epub_epub或file_plaintext_txt
  # 翻译mtool导出json时使用file_i18n_json
  textPlugins: # 文本处理插件列表，可以设置多个，按顺序执行
    - text_common_normalfix # 常规文本修复插件
    #- text_common_skipNoJP # 跳过无日语句子插件

  # 某个插件自己的设置可以进入plugins目录内修改对应的yaml文件，也可以这样设置：
  file_subtitle_srt_lrc_vtt: # 示例，可以在项目配置文件中覆盖插件yaml的设置项
    保存双语字幕: true

# 代理设置，使用中转供应商时一般不用开代理
proxy:
  enableProxy: false # 是否启用代理。[True/False]
  proxies:
    - address: http://127.0.0.1:7890

# 字典设置
dictionary:
  defaultDictFolder: Dict # 通用字典文件夹，相对于程序目录，也可填入绝对路径
  usePreDictInName: false # 将译前字典用在name字段，可用于改名，不会改变结果的name字段[True/False]
  usePostDictInName: false # 将译后字典用在name字段，可用于翻译name字段[True/False]
  sortPrePostDict: true # 将译前译后字典按查找词长度重排序。[True/False]
  # 译前字典
  preDict:
    - 01H字典_矫正_译前.txt # 用于口齿不清的矫正
    - 00通用字典_译前.txt
    - (project_dir)项目字典_译前.txt # (project_dir)代表字典在项目文件夹
  # GPT 字典
  gpt.dict:
    - GPT字典.txt
    - (project_dir)项目GPT字典.txt
  # 译后字典
  postDict:
    - 00通用字典_符号_译后.txt # 符号矫正
    - 00通用字典_译后.txt
    - (project_dir)项目字典_译后.txt

# 自动问题分析配置，在-前面加#号可以禁用
problemAnalyze:
  problemList: # 要发现的问题清单
    - 词频过高 # 重复大于20次
    - 标点错漏 # 标点符号多加或漏加
    - 残留日文 # 日文平假名片假名残留
    - 丢失换行 # 缺少换行符，一般没事
    - 多加换行 # 换行符比原句多，可能导致溢出屏幕
    - 比日文长 # 比日文长1.3倍以上
    - 字典使用 # 没有按GPT字典要求翻译
    - 引入英文 # 本来没有英文，译文引入了英文
    #- 比日文长严格 # 严格查找，不能比日文长
  arinashiDict: # 格式为 aaa:<空格>bbb（将被废弃）
    aaa: bbb
    ccc: ddd
